import flet as ft
import os
from datetime import datetime

class StudentRegistrationSystem:
    def __init__(self):
        # Variables pour les champs
        self.registration_no = ""
        self.date = "20/11/2022"
        self.full_name = "Ankit"
        self.class_var = ""
        self.date_of_birth = "05/10/2002"
        self.religion = "Hindu"
        self.gender = "Male"
        self.skills = "doctor"
        self.father_name = "F1"
        self.mother_name = "M1"
        self.father_occupation = "F_O1"
        self.mother_occupation = "M_O1"
        
        self.photo_path = None
        self.current_page = "dashboard"
        
        # Variables UI
        self.page = None
        self.sidebar = None
        self.main_content = None
        
    def main(self, page: ft.Page):
        self.page = page
        
        # Configuration de la page
        page.title = "√âcole Sans Base - Gestion d'√©tablissement"
        page.theme_mode = ft.ThemeMode.LIGHT
        page.window_width = 1400
        page.window_height = 800
        page.window_maximized = True
        page.padding = 0
        page.bgcolor = "#f8fafc"
        
        # Th√®me personnalis√©
        page.theme = ft.Theme(
            color_scheme=ft.ColorScheme(
                primary="#4f46e5",
                primary_container="#eef2ff",
                secondary="#64748b",
                surface="#ffffff",
                background="#f8fafc",
                error="#ef4444",
            )
        )
        
        self.setup_layout()
        page.update()
    
    def setup_layout(self):
        """Configuration du layout principal"""
        # Container principal avec sidebar et contenu
        self.sidebar = self.create_sidebar()
        self.main_content = ft.Container(
            content=ft.Column([]),
            expand=True,
            bgcolor="#f8fafc",
            padding=0
        )
        
        # Layout principal avec NavigationRail moderne
        main_layout = ft.Row([
            self.sidebar,
            self.main_content
        ], spacing=0, expand=True)
        
        self.page.add(main_layout)
        self.show_dashboard()
    
    def create_sidebar(self):
        """Cr√©er la sidebar moderne avec NavigationRail"""
        # Menu items
        menu_items = [
            ("dashboard", "Tableau de bord", ft.icons.DASHBOARD, self.show_dashboard),
            ("student_registration", "Inscription √©l√®ve", ft.icons.PERSON_ADD, self.show_student_registration),
            ("student_management", "Gestion √©l√®ves", ft.icons.GROUPS, self.show_student_management),
            ("teacher_registration", "Inscription prof.", ft.icons.PERSON_ADD_ALT_1, self.show_teacher_registration),
            ("teacher_management", "Gestion prof.", ft.icons.SCHOOL, self.show_teacher_management),
            ("class_management", "Gestion classes", ft.icons.CLASS_, self.show_class_management),
            ("grade_management", "Gestion notes", ft.icons.GRADE, self.show_grade_management),
            ("schedule", "Emploi du temps", ft.icons.SCHEDULE, self.show_schedule),
            ("attendance", "Pr√©sences", ft.icons.FACT_CHECK, self.show_attendance)
        ]
        
        # Cr√©er les destinations pour NavigationRail
        destinations = []
        for page_id, label, icon, callback in menu_items:
            destinations.append(
                ft.NavigationRailDestination(
                    icon=icon,
                    selected_icon=icon,
                    label=label,
                    padding=ft.padding.symmetric(vertical=8)
                )
            )
        
        # NavigationRail
        nav_rail = ft.NavigationRail(
            selected_index=0,
            label_type=ft.NavigationRailLabelType.ALL,
            min_width=100,
            min_extended_width=280,
            extended=True,
            bgcolor="#4f46e5",
            destinations=destinations,
            on_change=self.handle_navigation,
            indicator_color="#eef2ff",
            indicator_shape=ft.RoundedRectangleBorder(radius=12),
        )
        
        # Container pour la sidebar avec en-t√™te
        header = ft.Container(
            content=ft.Column([
                ft.Container(height=20),
                ft.Text(
                    "√âcole Sans Base",
                    size=24,
                    weight=ft.FontWeight.BOLD,
                    color="white"
                ),
                ft.Text(
                    "Gestion d'√©tablissement",
                    size=14,
                    color="#cbd5e1"
                ),
                ft.Container(height=30),
            ]),
            padding=ft.padding.all(25),
            bgcolor="#4f46e5"
        )
        
        sidebar_container = ft.Container(
            content=ft.Column([
                header,
                ft.Container(
                    content=nav_rail,
                    expand=True,
                    bgcolor="#4f46e5"
                )
            ], spacing=0),
            width=280,
            bgcolor="#4f46e5"
        )
        
        return sidebar_container
    
    def handle_navigation(self, e):
        """G√©rer la navigation"""
        index = e.control.selected_index
        
        callbacks = [
            self.show_dashboard,
            self.show_student_registration,
            self.show_student_management,
            self.show_teacher_registration,
            self.show_teacher_management,
            self.show_class_management,
            self.show_grade_management,
            self.show_schedule,
            self.show_attendance
        ]
        
        if index < len(callbacks):
            callbacks[index]()
    
    def clear_main_content(self):
        """Vider le contenu principal"""
        self.main_content.content = ft.Column([])
    
    def create_stats_cards(self):
        """Cr√©er les cartes de statistiques"""
        stats_data = [
            ("0", "√âl√®ves inscrits", ft.icons.GROUPS, "#3b82f6"),
            ("1", "Professeurs actifs", ft.icons.SCHOOL, "#10b981"),
            ("1", "Classes disponibles", ft.icons.CLASS_, "#f59e0b")
        ]
        
        cards = []
        for number, label, icon, color in stats_data:
            card = ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Row([
                            ft.Container(
                                content=ft.Icon(icon, color="white", size=24),
                                bgcolor=color,
                                border_radius=12,
                                width=50,
                                height=50,
                                alignment=ft.alignment.center
                            ),
                        ]),
                        ft.Container(height=15),
                        ft.Text(
                            number,
                            size=36,
                            weight=ft.FontWeight.BOLD,
                            color="#1e293b"
                        ),
                        ft.Text(
                            label,
                            size=14,
                            color="#64748b"
                        )
                    ]),
                    padding=25,
                    width=300
                ),
                elevation=2
            )
            cards.append(card)
        
        return ft.Row(cards, spacing=20)
    
    def show_dashboard(self):
        """Afficher le tableau de bord"""
        self.current_page = "dashboard"
        self.clear_main_content()
        
        # En-t√™te
        header = ft.Container(
            content=ft.Column([
                ft.Text(
                    "Tableau de bord",
                    size=32,
                    weight=ft.FontWeight.BOLD,
                    color="#1e293b"
                ),
                ft.Text(
                    "Vue d'ensemble de votre √©tablissement scolaire",
                    size=16,
                    color="#64748b"
                )
            ]),
            padding=ft.padding.all(30),
            bgcolor="#f8fafc"
        )
        
        # Statistiques
        stats = ft.Container(
            content=self.create_stats_cards(),
            padding=ft.padding.symmetric(horizontal=30)
        )
        
        # Carte de bienvenue
        welcome_card = ft.Card(
            content=ft.Container(
                content=ft.Column([
                    ft.Text(
                        "üéì Bienvenue dans votre syst√®me de gestion scolaire",
                        size=20,
                        weight=ft.FontWeight.BOLD,
                        color="#1e293b"
                    ),
                    ft.Container(height=15),
                    ft.Text(
                        "Utilisez le menu de navigation √† gauche pour acc√©der aux diff√©rentes fonctionnalit√©s :\n\n"
                        "‚Ä¢ Inscription √©l√®ve : Enregistrer un nouvel √©l√®ve\n"
                        "‚Ä¢ Gestion des √©l√®ves : Voir et modifier les informations des √©l√®ves\n"
                        "‚Ä¢ Gestion des professeurs : G√©rer le personnel enseignant\n"
                        "‚Ä¢ Gestion des classes : Organiser les classes et emplois du temps",
                        size=14,
                        color="#64748b"
                    )
                ]),
                padding=30
            ),
            elevation=2
        )
        
        welcome_container = ft.Container(
            content=welcome_card,
            padding=ft.padding.all(30)
        )
        
        # Assembler le contenu
        self.main_content.content = ft.Column([
            header,
            stats,
            welcome_container
        ], spacing=20)
        
        self.page.update()
    
    def show_student_registration(self):
        """Afficher le formulaire d'inscription des √©l√®ves"""
        self.current_page = "student_registration"
        self.clear_main_content()
        
        # En-t√™te
        header = ft.Container(
            content=ft.Column([
                ft.Text(
                    "Inscription √©l√®ve",
                    size=32,
                    weight=ft.FontWeight.BOLD,
                    color="#1e293b"
                ),
                ft.Text(
                    "Enregistrer un nouvel √©l√®ve dans le syst√®me",
                    size=16,
                    color="#64748b"
                )
            ]),
            padding=ft.padding.all(30),
            bgcolor="#f8fafc"
        )
        
        # Formulaire
        form_content = self.create_registration_form()
        
        # Assembler le contenu
        self.main_content.content = ft.Column([
            header,
            ft.Container(
                content=form_content,
                padding=ft.padding.all(30),
                expand=True
            )
        ])
        
        self.page.update()
    
    def create_registration_form(self):
        """Cr√©er le formulaire d'inscription complet"""
        # Champs de saisie
        self.reg_no_field = ft.TextField(
            label="Num√©ro d'inscription",
            value=self.registration_no,
            bgcolor="white",
            border_radius=8
        )
        
        self.date_field = ft.TextField(
            label="Date d'inscription",
            value=self.date,
            bgcolor="white",
            border_radius=8
        )
        
        self.name_field = ft.TextField(
            label="Nom complet",
            value=self.full_name,
            bgcolor="white",
            border_radius=8
        )
        
        self.class_dropdown = ft.Dropdown(
            label="Classe",
            options=[
                ft.dropdown.Option("5"),
                ft.dropdown.Option("6"),
                ft.dropdown.Option("7"),
                ft.dropdown.Option("8"),
                ft.dropdown.Option("9"),
                ft.dropdown.Option("10"),
                ft.dropdown.Option("11"),
                ft.dropdown.Option("12"),
            ],
            bgcolor="white",
            border_radius=8
        )
        
        self.dob_field = ft.TextField(
            label="Date de naissance",
            value=self.date_of_birth,
            bgcolor="white",
            border_radius=8
        )
        
        self.religion_field = ft.TextField(
            label="Religion",
            value=self.religion,
            bgcolor="white",
            border_radius=8
        )
        
        self.gender_radio = ft.RadioGroup(
            content=ft.Row([
                ft.Radio(value="Male", label="Masculin"),
                ft.Radio(value="Female", label="F√©minin"),
            ]),
            value=self.gender
        )
        
        self.skills_field = ft.TextField(
            label="Comp√©tences",
            value=self.skills,
            bgcolor="white",
            border_radius=8
        )
        
        self.father_name_field = ft.TextField(
            label="Nom du p√®re",
            value=self.father_name,
            bgcolor="white",
            border_radius=8
        )
        
        self.mother_name_field = ft.TextField(
            label="Nom de la m√®re",
            value=self.mother_name,
            bgcolor="white",
            border_radius=8
        )
        
        self.father_occ_field = ft.TextField(
            label="Profession du p√®re",
            value=self.father_occupation,
            bgcolor="white",
            border_radius=8
        )
        
        self.mother_occ_field = ft.TextField(
            label="Profession de la m√®re",
            value=self.mother_occupation,
            bgcolor="white",
            border_radius=8
        )
        
        # Photo placeholder
        self.photo_container = ft.Container(
            content=ft.Column([
                ft.Icon(ft.icons.CAMERA_ALT, size=48, color="#64748b"),
                ft.Text("Cliquez pour ajouter\nune photo", text_align=ft.TextAlign.CENTER, color="#64748b")
            ], horizontal_alignment=ft.CrossAxisAlignment.CENTER),
            width=200,
            height=220,
            bgcolor="#f8fafc",
            border=ft.border.all(1, "#e2e8f0"),
            border_radius=8,
            alignment=ft.alignment.center,
            on_click=self.upload_photo
        )
        
        # Layout en deux colonnes
        left_column = ft.Column([
            # Section inscription
            ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Text("Informations d'inscription", size=18, weight=ft.FontWeight.BOLD),
                        ft.Container(height=10),
                        ft.Row([
                            self.reg_no_field,
                            self.date_field
                        ], spacing=20)
                    ]),
                    padding=25
                ),
                elevation=2
            ),
            
            # Section √©l√®ve
            ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Text("Informations de l'√©l√®ve", size=18, weight=ft.FontWeight.BOLD),
                        ft.Container(height=10),
                        ft.Row([self.name_field, self.class_dropdown], spacing=20),
                        ft.Row([self.dob_field, self.religion_field], spacing=20),
                        ft.Column([
                            ft.Text("Genre", size=14, weight=ft.FontWeight.W_500),
                            self.gender_radio
                        ]),
                        self.skills_field
                    ]),
                    padding=25
                ),
                elevation=2
            ),
            
            # Section parents
            ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Text("Informations des parents", size=18, weight=ft.FontWeight.BOLD),
                        ft.Container(height=10),
                        ft.Row([self.father_name_field, self.mother_name_field], spacing=20),
                        ft.Row([self.father_occ_field, self.mother_occ_field], spacing=20)
                    ]),
                    padding=25
                ),
                elevation=2
            )
        ], spacing=20, expand=True)
        
        # Colonne droite avec photo et boutons
        right_column = ft.Column([
            # Section photo
            ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Text("Photo de l'√©l√®ve", size=18, weight=ft.FontWeight.BOLD),
                        ft.Container(height=15),
                        self.photo_container,
                        ft.Container(height=15),
                        ft.ElevatedButton(
                            "üì§ T√©l√©charger Photo",
                            on_click=self.upload_photo,
                            style=ft.ButtonStyle(
                                bgcolor="#3b82f6",
                                color="white"
                            )
                        )
                    ], horizontal_alignment=ft.CrossAxisAlignment.CENTER),
                    padding=25,
                    width=300
                ),
                elevation=2
            ),
            
            # Section boutons
            ft.Card(
                content=ft.Container(
                    content=ft.Column([
                        ft.Text("Actions", size=18, weight=ft.FontWeight.BOLD),
                        ft.Container(height=15),
                        ft.ElevatedButton(
                            "üíæ Enregistrer",
                            on_click=self.save_student,
                            style=ft.ButtonStyle(
                                bgcolor="#10b981",
                                color="white"
                            ),
                            width=250
                        ),
                        ft.ElevatedButton(
                            "üîÑ R√©initialiser",
                            on_click=self.reset_form,
                            style=ft.ButtonStyle(
                                bgcolor="#f59e0b",
                                color="white"
                            ),
                            width=250
                        ),
                        ft.ElevatedButton(
                            "üö™ Quitter",
                            on_click=lambda _: self.page.window_close(),
                            style=ft.ButtonStyle(
                                bgcolor="#ef4444",
                                color="white"
                            ),
                            width=250
                        )
                    ]),
                    padding=25,
                    width=300
                ),
                elevation=2
            )
        ], spacing=20)
        
        # Layout principal du formulaire
        form_layout = ft.Row([
            left_column,
            right_column
        ], spacing=30, expand=True, alignment=ft.MainAxisAlignment.START)
        
        return form_layout
    
    def upload_photo(self, e):
        """G√©rer l'upload de photo"""
        # Simuler l'upload de photo
        self.photo_container.content = ft.Column([
            ft.Icon(ft.icons.CHECK_CIRCLE, size=48, color="#10b981"),
            ft.Text("Photo ajout√©e", text_align=ft.TextAlign.CENTER, color="#10b981")
        ], horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        self.page.update()
    
    def save_student(self, e):
        """Sauvegarder les informations de l'√©l√®ve"""
        # R√©cup√©rer les valeurs des champs
        student_data = {
            'registration_no': self.reg_no_field.value,
            'date': self.date_field.value,
            'full_name': self.name_field.value,
            'class': self.class_dropdown.value,
            'date_of_birth': self.dob_field.value,
            'religion': self.religion_field.value,
            'gender': self.gender_radio.value,
            'skills': self.skills_field.value,
            'father_name': self.father_name_field.value,
            'mother_name': self.mother_name_field.value,
            'father_occupation': self.father_occ_field.value,
            'mother_occupation': self.mother_occ_field.value
        }
        
        # Afficher un message de succ√®s
        self.page.show_snack_bar(
            ft.SnackBar(
                content=ft.Text("‚úÖ √âl√®ve enregistr√© avec succ√®s!"),
                bgcolor="#10b981"
            )
        )
    
    def reset_form(self, e):
        """R√©initialiser le formulaire"""
        self.reg_no_field.value = ""
        self.date_field.value = "20/11/2022"
        self.name_field.value = ""
        self.class_dropdown.value = None
        self.dob_field.value = ""
        self.religion_field.value = ""
        self.gender_radio.value = "Male"
        self.skills_field.value = ""
        self.father_name_field.value = ""
        self.mother_name_field.value = ""
        self.father_occ_field.value = ""
        self.mother_occ_field.value = ""
        
        # R√©initialiser la photo
        self.photo_container.content = ft.Column([
            ft.Icon(ft.icons.CAMERA_ALT, size=48, color="#64748b"),
            ft.Text("Cliquez pour ajouter\nune photo", text_align=ft.TextAlign.CENTER, color="#64748b")
        ], horizontal_alignment=ft.CrossAxisAlignment.CENTER)
        
        self.page.update()
    
    # M√©thodes pour les autres pages (placeholders)
    def show_student_management(self):
        self.show_placeholder_page("Gestion des √©l√®ves", "G√©rer les informations des √©l√®ves existants")
    
    def show_teacher_registration(self):
        self.show_placeholder_page("Inscription professeur", "Enregistrer un nouveau professeur")
    
    def show_teacher_management(self):
        self.show_placeholder_page("Gestion des professeurs", "G√©rer le personnel enseignant")
    
    def show_class_management(self):
        self.show_placeholder_page("Gestion des classes", "Organiser les classes et salles")
    
    def show_grade_management(self):
        self.show_placeholder_page("Gestion des notes", "Saisir et g√©rer les notes des √©l√®ves")
    
    def show_schedule(self):
        self.show_placeholder_page("Emploi du temps", "G√©rer les emplois du temps")
    
    def show_attendance(self):
        self.show_placeholder_page("Gestion des pr√©sences", "Suivre les pr√©sences des √©l√®ves")
    
    def show_placeholder_page(self, title, subtitle):
        """Afficher une page placeholder"""
        self.clear_main_content()
        
        header = ft.Container(
            content=ft.Column([
                ft.Text(title, size=32, weight=ft.FontWeight.BOLD, color="#1e293b"),
                ft.Text(subtitle, size=16, color="#64748b")
            ]),
            padding=ft.padding.all(30),
            bgcolor="#f8fafc"
        )
        
        placeholder_card = ft.Card(
            content=ft.Container(
                content=ft.Column([
                    ft.Icon(ft.icons.CONSTRUCTION, size=64, color="#64748b"),
                    ft.Container(height=20),
                    ft.Text(
                        f"{title} - En cours de d√©veloppement",
                        size=20,
                        weight=ft.FontWeight.BOLD,
                        color="#1e293b",
                        text_align=ft.TextAlign.CENTER
                    ),
                    ft.Text(
                        "Cette fonctionnalit√© sera bient√¥t disponible.",
                        size=14,
                        color="#64748b",
                        text_align=ft.TextAlign.CENTER
                    )
                ], horizontal_alignment=ft.CrossAxisAlignment.CENTER),
                padding=50,
                alignment=ft.alignment.center
            ),
            elevation=2
        )
        
        content = ft.Container(
            content=placeholder_card,
            padding=ft.padding.all(30),
            alignment=ft.alignment.center,
            expand=True
        )
        
        self.main_content.content = ft.Column([header, content])
        self.page.update()


# Point d'entr√©e de l'application
def main():
    app = StudentRegistrationSystem()
    ft.app(target=app.main)

if __name__ == "__main__":
    main()